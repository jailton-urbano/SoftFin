@model SoftFin.Web.Models.Estabelecimento

@{
    ViewBag.Title = "Lista Estabelecimentos";
}

<div class='panel-group' id='accordion'>
  <div class='panel panel-default'>
    <div class='panel-heading'>
      <h4 class='panel-title'>
        <a data-toggle='collapse' data-parent='#accordion' href='#collapseOne'>
          Filtros:
        </a>
      </h4>
    </div>
    <div id='collapseOne' class='panel-collapse collapse out'>
      <div class='panel-body'>
        <form class='form-search'>
            <div class='container-fluid'>
            @Html.HiddenFor(x => x.id)
            <div class='row'>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.Apelido)
                    @Html.TextBoxFor(x => x.Apelido, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Apelido)
                </div>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.Codigo)
                    @Html.TextBoxFor(x => x.Codigo, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Codigo)
                </div>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.NomeCompleto)
                    @Html.TextBoxFor(x => x.NomeCompleto, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.NomeCompleto)
                </div>
            </div>
            <div class='row'>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.Logradouro)
                    @Html.TextBoxFor(x => x.Logradouro, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Logradouro)
                </div>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.NumeroLogradouro) </br>
                    @Html.TextBoxFor(x => x.NumeroLogradouro, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.NumeroLogradouro)
                </div>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.Complemento)
                    @Html.TextBoxFor(x => x.Complemento, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Complemento)
                </div>
            </div>
            <div class='row'>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.BAIRRO)
                    @Html.TextBoxFor(x => x.BAIRRO, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.BAIRRO)
                </div>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.Municipio_id)
                    @Html.DropDownListFor(model => model.Municipio_id, (SelectList)ViewData["Municipio"], "---Selecione---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Municipio_id)
                </div>
                <div class='col-md-2 form-group'>
                    @Html.LabelFor(x => x.CEP) 
                    @Html.TextBoxFor(x => x.CEP, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.CEP)
                </div>
            </div>
            <div class='row'>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.Empresa_id)
                    @Html.DropDownListFor(model => model.Empresa_id, (SelectList)ViewData["Empresa"], "---Selecione---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Empresa_id)
                </div>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.CNPJ)
                    @Html.TextBoxFor(x => x.CNPJ, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.CNPJ)
                </div>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.InscricaoEstadual)
                    @Html.TextBoxFor(x => x.InscricaoEstadual, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.InscricaoEstadual)
                </div>
            </div>
            <div class='row'>
                <div class='col-md-3 form-group'>
                    @Html.LabelFor(x => x.InscricaoMunicipal) 
                    @Html.TextBoxFor(x => x.InscricaoMunicipal, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.InscricaoMunicipal)
                </div>
            </div>
        </div>
            </br>
            <button type='button' name='pesquisa' id='pesquisa' class='btn btn-primary'>
                <span class="glyphicon glyphicon-search"></span> Pesquisar</button>
            <a href='@Url.Action("Excel")'>
            <img src='~/Content/images/icoExcel.gif' /></a>
        </form>
      </div>
    </div>
  </div>

</div>


<table id="jqgEstabelecimentos" cellpadding="0" cellspacing="0"></table>

<div   id="jqgEstabelecimentosOpc" style="text-align:center;"></div>

    <script type="text/javascript">
        $(document).ready(function () {

            Metronic.init(); // init metronic core components
            Layout.init(); // init current layout
            QuickSidebar.init(); // init quick sidebar

            $('#jqgEstabelecimentos').jqGrid({
                //url from wich data should be requested
                url: '@Url.Action("Listas")',
                //type of data
                datatype: 'json',
                //url access method type
                mtype: 'POST',
                //columns names
                colNames: ['Código', 'Nome Fantasia','Nome Empresa'], 
                //columns model
                colModel: [
                            { name: 'Código', index: 'ID_ESTAB', align: 'left', editable: false, width: '200', hidden: true },
                            {
                                name: 'NomeFantasia', index: 'APELIDO_ESTAB', align: 'left', editable: false, edittype: 'text',
                                    editoptions: { maxlength: 100 }, editrules: { required: true }, width: '465'
                            },
                            {
                                name: 'NomeEstabelecimento', index: 'NOME_COMPLETO_ESTAB', align: 'left', editable: false, edittype: 'text',
                                editoptions: { maxlength: 100 }, editrules: { required: true }, width: '465'
                            }
                ],
                //pager for grid
                pager: $('#jqgEstabelecimentosOpc'),
                //number of rows per page
                rowNum: 20,
                //initial sorting column
                sortname: 'APELIDO_ESTAB',
                //initial sorting direction
                sortorder: 'asc',
                viewrecords: true,
                //grid height
                height: '100%'

            });

            $('#jqgEstabelecimentos').jqGrid('navGrid', '#jqgEstabelecimentosOpc',
                { add: false, del: false, edit: false, search: false },
                { width: 'auto', url: 'www.google.com' },
                { width: 'auto', url: '@Url.Action("Insert")' },
                { width: 'auto', url: '@Url.Action("Delete")' });

            $('#jqgEstabelecimentos').navButtonAdd('#jqgEstabelecimentosOpc', { // custom edit button
                caption:"Novo", 
                buttonicon: "ui-icon ui-icon-plus",
                onClickButton: function(){ 
                    window.location = "Create/";
                }, 
                position: "Last"
            });

            $('#jqgEstabelecimentos').navButtonAdd('#jqgEstabelecimentosOpc', { // custom edit button
                caption: "Alterar",
                buttonicon: "ui-icon ui-icon-pencil",
                onClickButton: function () {
                    var gr = jQuery("#jqgEstabelecimentos").jqGrid('getGridParam', 'selrow');
                    if (gr != null) {
                        window.location = "Edit/" + gr;
                    }
                    else {
                        alert("Selecione 1 coluna.");
                    };
                },
                position: "Last"
            });

            $('#jqgEstabelecimentos').navButtonAdd('#jqgEstabelecimentosOpc', { // custom edit button
                caption: "Excluir",
                buttonicon: "ui-icon ui-icon-trash",
                onClickButton: function () {
                    var gr = jQuery("#jqgEstabelecimentos").jqGrid('getGridParam', 'selrow');
                    if (gr != null) {
                        window.location = "Delete/" + gr;
                    }
                    else {
                        alert("Selecione 1 coluna.");
                    };
                },
                position: "Last"
            });
            
            $('#jqgEstabelecimentos').navButtonAdd('#jqgEstabelecimentosOpc', { // custom edit button
                caption: "Logo",
                buttonicon: "ui-icon ui-icon-image",
                onClickButton: function () {
                    var gr = jQuery("#jqgEstabelecimentos").jqGrid('getGridParam', 'selrow');
                    if (gr != null) {
                        window.location = "Logo/" + gr;
                    }
                    else {
                        alert("Selecione 1 coluna.");
                    };
                },
                position: "Last"
            });

        });


        $('#pesquisa').click(function () {
            var caminho = '@Url.Action("Listas")';
                caminho += '?Apelido=';
                caminho += $('#Apelido').val();
                caminho += '&Codigo=';
                caminho += $('#Codigo').val();
                caminho += '&NomeCompleto=';
                caminho += $('#NomeCompleto').val();
                caminho += '&Logradouro=';
                caminho += $('#Logradouro').val();
                caminho += '&NumeroLogradouro=';
                caminho += $('#NumeroLogradouro').val();
                caminho += '&Complemento=';
                caminho += $('#Complemento').val();
                caminho += '&BAIRRO=';
                caminho += $('#BAIRRO').val();
                caminho += '&Municipio_id=';
                caminho += $('#Municipio_id').val();
                caminho += '&CEP=';
                caminho += $('#CEP').val();
                caminho += '&Empresa_id=';
                caminho += $('#Empresa_id').val();
                caminho += '&CNPJ=';
                caminho += $('#CNPJ').val();
                caminho += '&InscricaoEstadual=';
                caminho += $('#InscricaoEstadual').val();
                caminho += '&InscricaoMunicipal=';
                caminho += $('#InscricaoMunicipal').val();

   
                jQuery('#jqgEstabelecimentos').jqGrid('setGridParam', { url: caminho }).trigger('reloadGrid');
            });

    </script>

<script>
    $('#CEP').attr('maxlength', '9');
    $('#CEP').attr('style', 'text-align:right');
    $('#CEP').keydown(
      function (event) {
          formataCEP(this, event);
      });
    $('#CNPJ').attr('maxlength', '18');
    $('#CNPJ').attr('style', 'text-align:right');
    $('#CNPJ').keydown(
      function (event) {
          formataCNPJ(this, event);
      });
</script>
</style>